---
- hosts: master_node
  become: yes
  tasks:
    - name: Ensure containerd configuration is correct
      replace:
        path: /etc/containerd/config.toml
        regexp: '^# BEGIN ANSIBLE MANAGED BLOCK.*?^# END ANSIBLE MANAGED BLOCK'
        replace: |
          # BEGIN ANSIBLE MANAGED BLOCK
          version = 2
          [plugins]
            [plugins."io.containerd.grpc.v1.cri"]
            [plugins."io.containerd.grpc.v1.cri".containerd]
              default_runtime_name = "runc"
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
                [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                  runtime_type = "io.containerd.runc.v2"
                  [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                    SystemdCgroup = true
          # END ANSIBLE MANAGED BLOCK
        backup: yes

    - name: Create kubelet drop-in directory
      file:
        path: /usr/lib/systemd/system/kubelet.service.d
        state: directory
        mode: '0755'

    - name: Apply kubelet service configuration
      copy:
        content: |
          [Service]
          Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
          Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml"
          Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=systemd"
          EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
          EnvironmentFile=-/etc/default/kubelet
          ExecStart=
          ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS
        dest: /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
        owner: root
        group: root
        mode: '0644'

    - name: Reload systemd daemon
      command: systemctl daemon-reload

    - name: Restart containerd service
      service:
        name: containerd
        state: restarted

    - name: Restart kubelet service
      service:
        name: kubelet
        state: restarted

    - name: Reset Kubernetes setup
      command: kubeadm reset -f
      ignore_errors: yes

    - name: Remove Kubernetes-related directories
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/kubernetes
        - /var/lib/etcd
        - /var/lib/kubelet
        - /var/lib/dockershim  # Remove if using dockershim

    - name: Reinitialize Kubernetes master
      command: kubeadm init --apiserver-advertise-address={{ ansible_host }} --pod-network-cidr=192.168.0.0/16
      register: kubeadm_init
      failed_when: "'error' in kubeadm_init.stderr"

    - name: Create .kube directory
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: '0755'

    - name: Copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: yes

    - name: Set up kube config file ownership
      file:
        path: "{{ ansible_env.HOME }}/.kube/config"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0644'

    - name: Apply Calico network plugin
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      when: kubeadm_init.changed

    - name: Generate kubeadm join command
      command: kubeadm token create --print-join-command
      register: join_cmd
      changed_when: false

    - name: Save kubeadm join command to file
      copy:
        content: "{{ join_cmd.stdout }}"
        dest: /tmp/kubeadm_join_cmd.txt

    - name: Fetch kubeadm join command file from master node  
      fetch:  
        src: /tmp/kubeadm_join_cmd.txt  
        dest: /tmp/  
        flat: yes  

- hosts: worker_node
  become: yes
  tasks:
    - name: Copy kubeadm join command file from localhost to worker node
      copy:
        src: /tmp/kubeadm_join_cmd.txt
        dest: /tmp/kubeadm_join_cmd.txt

    - name: Join worker nodes to the cluster
      command: "{{ lookup('file', '/tmp/kubeadm_join_cmd.txt') }}"
